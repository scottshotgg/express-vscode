{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "expr",
	"scopeName": "source.expr",
	"patterns": [
			{
				"comment": "Line Comments -- Asterisk only works at beginning of line",
				"match": "((;|^\\*).*$)",
				"captures": {
					"1" :{
						"name": "comment.line.expr"
					}
				}
			},
			{
				"comment": "String Constants",
				"match": "\\\".+\\\"",
				"name": "string.quoted.single.expr"
			},
			{
				"comment": "Label Definitions -- with & without colons",
				"match": "^([_a-zA-Z][-\\w]+)(:)?",
				"captures": {
					"1": {"name": "entity.name.function.expr"},
					"2": {"name": "keyword.operator.expr"}
				}
			},		
			{
				"comment": "#include directive and path",
				"match": "(?i-)^(#include)\\s+([-_.a-zA-Z0-9/~]+)(?-i)",
				"captures": {
					"1": {"name": "keyword.control.lst-expr"},
					"2": {"name": "string.unquoted.path.lst-expr"}
				}
			},
			{
				"comment": "Directives",
				"match": "(?i-)\\s+(ORG|EQU|REDEF|DS|DW|DB|FCC|END|#ifdef|#ifndef|#ifeq|#else|#endif)\\b(?-i)",
				"captures": {
					"1" :{
						"name": "keyword.control.expr"
					}
				}
			},
			{
				"comment": "Load & Store Instructions",
				"match": "(?i-)\\s+(L(D(A[AB]|[DSXY])|EA[SXY])|ST(A[AB]|[DSXY]))\\b(?-i)",
				"captures": {
					"1" :{
						"name": "keyword.control.expr"
					}
				}
			},
			{
				"comment": "Transfer & Exchange Instructions",
				"match": "(?i-)\\s+(T(A[BP]|[BP]A|FR|S[XY]|[XY]S)|XGD[XY]|EXG|SEX)\\b(?-i)",
				"captures": {
					"1": {
						"name": "keyword.control.expr"
					}
				}
					
			},
			{
				"comment": "Move Instructions",
				"match": "(?i-)\\s+(MOV[BW])\\b(?-i)",
				"captures": {
					"1": {
						"name": "keyword.control.expr"
					}
				}
			},
			{
				"comment": "Addition & Subtraction Instructions",
				"match": "(?i-)\\s+(A(B[AXY]|D(C[AB]|D[ABD]))|S(B(A|C[AB])|UB[ABD]))\\b(?-i)",
				"captures": {
					"1": {
						"name": "keyword.control.expr"
					}
				}
			},
			{
				"comment": "Binary Coded Decimal Instructions",
				"match": "(?i-)\\s+(DAA)\\b(?-i)",
				"captures": {
					"1": {
						"name": "keyword.control.expr"
					}
				}
			},
			{
				"comment": "Decrement & Increment Instructions",
				"match": "(?i-)\\s+(DE(C[AB]?|[SXY])|IN(C[AB]?|[SXY]))\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Compare & Test Instructions",
				"match": "(?i-)\\s+(C(BA|MP[AB]|P[DSXY])|TST[AB]?)\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Boolean Logic Instructions",
				"match": "(?i-)\\s+(AND([AB]|CC)|EOR[AB]|OR(A[AB]|CC))\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Clear, Complement, & Negate Instructions",
				"match": "(?i-)\\s+(C(L(R[AB]?|[CIV])|OM[AB]?)|NEG[AB]?)\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Multiplication & Division Instructions",
				"match": "(?i-)\\s+(E?MULS?|[EI]DIVS?|FDIV)\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Bit Test and Manipulation Instructions",
				"match": "(?i-)\\s+(B(CLR|IT[AB]|SET))\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Shift & Rotate Instructions",
				"match": "(?i-)\\s+([LA]S[LR][AB]?|LS[LR]D|ASLD|RO[LR][AB]?)\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Fuzzy Logic Instructions",
				"match": "(?i-)\\s+(MEM|REVW?|WAVR?)\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Minimum & Maximum Instructions",
				"match": "(?i-)\\s+(M(IN|AX)[AM]|EM(IN|AX)[DM])\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Multiply & Accumulate Instruction",
				"match": "(?i-)\\s+(EMACS)\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Table Interpolation Instructions",
				"match": "(?i-)\\s+(E?TBL)\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Long & Short Branch Instructions",
				"match": "(?i-)\\s+(L?B(R[AN]|[CV][CS]|EQ|MI|NE|PL|L[EOST]|H[IS]|G[ET]))\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Bit Condition Branch Instructions",
				"match": "(?i-)\\s+(BR(CLR|SET))\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Loop Primitive Instructions",
				"match": "(?i-)\\s+([DIT]B(EQ|NE))\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Jump & Subroutine Instructions",
				"match": "(?i-)\\s+(BSR|CALL|J(MP|SR)|RT[CS])\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Interrupt Instructions",
				"match": "(?i-)\\s+((RT|SW)I|TRAP)\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Index Manipulation Instructions",
				"match": "(?i-)\\s+((AB|XGD)[XY]|(CP|LD|LEA|ST)[SXY]|T(FR|S[XY]|[XY]S)|EXG|XGD[XY])\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Stacking Instructions",
				"match": "(?i-)\\s+((CP|DE|IN|LD|LEA|ST|TX|TY|)S|TS[XY]|(PUL|PSH)[ABCDXY])\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Condition Code Instructions",
				"match": "(?i-)\\s+(SE[CIV])\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Stop & Wait Instructions",
				"match": "(?i-)\\s+(STOP|WAI)\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Background Mode and Null Instructions",
				"match": "(?i-)\\s+(BGND|L?BRN|NOP)\\b(?-i)",
				"captures":
					{"1":
						{"name": "keyword.control.expr"}}
			},
			{
				"comment": "Asterisk as Current Address",
				"match": "(?i-)(\\s+|,\\s*)(\\*)(?-i)",
				"captures":
					{"2":
						{"name": "variable.language.expr"}}
			},
			{
				"comment": "Registers",
				"match": "(?i-)(\\s+|,\\s*)(A|B|CCR|D|X|Y|PC|SP)\\b(?-i)",
				"captures":
					{"2":
						{"name": "variable.language.expr"}}
			},
			{
				"comment": "Numeric Constants",
				"match": "(?i-)(\\s+|,\\s*)(#)?((%)([01]{8}|[01]{16})|(\\$)([0-9A-F]{2}|[0-9A-F]{4})|([0-9]{1,5}))\\b(?-i)",
				"captures": {
					"2":
						{"name": "keyword.operator.expr"},
					"4":
						{"name": "keyword.operator.expr"},
					"5":
						{"name": "constant.numeric.expr"},
					"6":
						{"name": "keyword.operator.expr"},
					"7":
						{"name": "constant.numeric.expr"},
					"8":
						{"name": "constant.numeric.expr"}
				}
			},
			{
				"comment": "Label Use",
				"match": "(?i-)(\\s+|,\\s*)(#)?([_a-zA-Z][-\\w]+)\\b(?-i)",
				"captures": {
					"2":
						{"name": "keyword.operator.expr"},
					"3":
						{"name": "variable.other.expr"}
			}
		}
	]
}